plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version"6.0.0-m2"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    selenideVersion = "6.13.0",
    junitVersion = "5.9.2",
    restVersion = "5.3.0",
    ownerVersion = "1.0.12",
    assertjVersion = "3.24.2",
    slf4jVersion = "2.0.7",
    pdfVersion = "1.7.0",
    webDriverManagerVersion = "5.3.2",
    fakerVersion = "1.0.2",
    aspectjVersion = "1.9.6"


allure {
    allureReport {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.codeborne:pdf-test:$pdfVersion",
            "io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.github.javafaker:javafaker:$fakerVersion")
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        if (System.getProperty("tag") != null && !System.getProperty("tag").isEmpty()) {
            includeTags System.getProperty("tag")
        }
    }
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}